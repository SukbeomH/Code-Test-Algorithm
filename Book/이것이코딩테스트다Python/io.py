# input() 함수는 사용자로부터 입력을 받는 함수이다.
# input() 함수는 입력받은 값을 문자열로 반환한다.
# 따라서 숫자를 입력받아야 하는 경우에는 int() 함수를 사용하여 형변환을 해주어야 한다.
#
# data = input()
# print(data) # 1 2 3 4 5
#

data = list(map(int, input().split()))
print(data) # [1, 2, 3, 4, 5]

# input 함수의 경우 동작속도가 느리다.
# 따라서 sys 라이브러리의 readline 함수를 사용하여 입력을 받는다.

import sys
data = sys.stdin.readline().rstrip()

# 출력
# 출력을 위해서는 print() 함수를 사용한다.
# print() 함수는 기본적으로 출력 이후에 줄바꿈을 수행한다.
# 줄바꿈을 원치 않는 경우에는 print() 함수의 end 속성을 변경하면 된다.
# print('Hello, World!', end=' ') # Hello, World!

print(data) # 1 2 3 4 5

# f-string
# f-string은 문자열 앞에 f가 붙은 문자열이다.
# f-string은 문자열 내부에 변수의 값을 사용할 수 있다.
# f-string은 문자열 내부에 표현식을 사용할 수 있다.
# f-string은 문자열 내부에 함수의 반환값을 사용할 수 있다.

a = 7
b = 3
print(f'a + b = {a + b}') # a + b = 10

# 파일 입출력
# 파일 입출력을 위해서는 open() 함수를 사용한다.
# open() 함수는 파일을 열어 파일 객체를 반환한다.
# open() 함수는 파일을 열 때 사용할 모드를 지정한다.
# open() 함수는 파일을 열 때 사용할 인코딩을 지정한다.
# open() 함수는 파일을 열 때 사용할 버퍼링을 지정한다.

# 파일을 열 때 사용할 모드
# r: 읽기모드
# w: 쓰기모드
# a: 추가모드
# r+: 읽기/쓰기모드
# w+: 읽기/쓰기모드
# a+: 읽기/추가모드

# 파일을 열 때 사용할 인코딩
# utf-8: 유니코드 문자를 인코딩하는 방식 중 하나이다.
# cp949: 한글 윈도우의 기본 인코딩 방식이다.
# euc-kr: 한글 윈도우의 대표적인 인코딩 방식이다.
# iso-8859-1: 서유럽 언어의 대표적인 인코딩 방식이다.

# 파일을 열 때 사용할 버퍼링
# 0: 버퍼링을 사용하지 않는다.
# 1: 버퍼링을 사용한다.
# -1: 시스템 기본 버퍼링을 사용한다.

# 파일을 열어 파일 객체를 반환한다.
# 파일을 열 때 사용할 모드를 지정한다.
# 파일을 열 때 사용할 인코딩을 지정한다.
# 파일을 열 때 사용할 버퍼링을 지정한다.
# 파일을 닫는다.
# 파일 객체의 close() 메서드를 사용하여 파일을 닫는다.
# 파일을 닫지 않으면 파일이 사용 중인 상태로 남아있게 된다.

